/*
 * File: app/controller/Log.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SxapiManager.controller.Log', {
    extend: 'Ext.app.Controller',

    stores: [
        'logs'
    ],
    views: [
        'logs',
        'logs.Actions',
        'logs.Filters'
    ],

    refs: [
        {
            ref: 'logs',
            selector: '#logs'
        },
        {
            ref: 'logGrid',
            selector: '#logs_grid'
        },
        {
            ref: 'logDetail',
            selector: '#logs_detail'
        }
    ],

    onGridpanelSelect: function(selModel, record, index, options) {
        if (record) {
            var detailPanel = this.getLogDetail();
            var bookTplMarkup = [
            'ID: <b>{_id}</b><br/>',
            'Date: {date}<br/>',
            'Type: {type}<br/>',
            'Message: {message}<br/>',
            'Session: {session}<br/>',
            'Level: {level}<br/>',
            'Code: {code}<br/>',
            'IP: {ip}<br/>'
            ];
            var bookTpl = Ext.create('Ext.Template', bookTplMarkup);
            bookTpl.overwrite(detailPanel.body, record.data);
        }
        sxApp.getController('Log').getLogGrid().down('#delbtn').setDisabled(selModel.length === 0);
        console.log("ddddddddddd");
    },

    onGridpanelRender: function(abstractcomponent, options) {
        console.log("rendering log grid");
        this.getLogs().down('#delbtn').setDisabled(true);
    },

    onGridAddButtonClick: function(button, e, options) {
        console.log("click log add");
        this.getStore('logs').insert(0, {});
    },

    onGridDeleteButtonClick: function(button, e, options) {
        console.log("click log delete");
        var selection = this.getLogGrid().getView().getSelectionModel().getSelection()[0];
        if (selection) {
            this.getStore('logs').remove(selection);
        }
    },

    onGridActionButtonClick: function(button, e, options) {
        console.log("click log action");
        view = Ext.create('SxapiManager.view.logs.Actions');
        view.show();
    },

    onGridFilterButtonClick: function(button, e, options) {
        console.log("click log filter");
    },

    init: function(application) {
        console.log("init log controller");

        this.control({
            "#logs_grid": {
                select: this.onGridpanelSelect,
                render: this.onGridpanelRender
            },
            "#logs #addbtn": {
                click: this.onGridAddButtonClick
            },
            "#logs #delbtn": {
                click: this.onGridDeleteButtonClick
            },
            "#logs #actionbtn": {
                click: this.onGridActionButtonClick
            },
            "#logs #filterbtn": {
                click: this.onGridFilterButtonClick
            }
        });
    },

    onLaunch: function() {
        console.log("launch log controller");
    }

});
