/*
 * File: app/store/session.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SxapiManager.store.session', {
    extend: 'Ext.data.Store',

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: false,
            storeId: 'session',
            proxy: {
                type: 'ajax',
                url: 'http://127.0.0.1/git/startx_api/session?app=sample-apimanager&format=json',
                reader: {
                    type: 'json',
                    idProperty: '_id',
                    messageProperty: 'message',
                    root: 'data'
                },
                listeners: {
                    exception: {
                        fn: me.onException,
                        scope: me
                    }
                }
            },
            fields: [
                {
                    name: '_id',
                    type: 'string'
                },
                {
                    name: 'api',
                    type: 'string'
                },
                {
                    name: 'state',
                    type: 'int'
                },
                {
                    name: 'time_end',
                    type: 'date'
                },
                {
                    name: 'time_start',
                    type: 'date'
                },
                {
                    name: 'time_update',
                    type: 'date'
                }
            ]
        }, cfg)]);
    },

    onException: function(server, response, operation, options) {
        console.log("exception in proxy");
        if(response.responseText[0] == '{') {
            var detailResponse = JSON.parse(response.responseText);  
            if(typeof Ext.Msg !== 'undefined')
            Ext.Msg.show(detailResponse.status, detailResponse.message);
            else console.log("Server response : "+detailResponse.message);
            if(typeof detailResponse.data !== 'undefined')
            console.log(detailResponse.data);
            var loadingMessage = Ext.getCmp('loadingmessagebox').update("... session périmée ...");
            if(typeof loadingMessage !== 'undefined')
            loadingMessage.update("SERVER ERROR : "+detailResponse.message);
        }
        else {
            console.log(response);
        }


    }

});